@use "variables" as *;

.align-baseline {
    align-items: baseline;
}

.align-center {
    align-items: center;
}

.align-start {
    align-items: start;
}

.badge {
    border-radius: $border-radius;
    border-style: outset;
    border-width: 2px;
    font-size: var(--mm-font-size-xs);
    font-weight: bold;
    padding: 0 2px;
}

.column {
    display: flex;
    flex-direction: column;
}

.content-width {
    width: $content-width;
}

.cursor-default {
    cursor: default;
}

.cursor-pointer {
    cursor: pointer;
}

.ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
}

.fill {
    flex-grow: 1;
}

.font-weight-bold {
    font-weight: bold;
}

.font-weight-normal {
    font-weight: normal;
}

.nowrap {
    white-space: nowrap;
}

.outlined-text {
    text-shadow:
        min(-1px, -0.02em) min(-1px, -0.02em) 0.02em black,
        min(-1px, -0.02em) max(1px, 0.02em) 0.02em black,
        max(1px, 0.02em) min(-1px, -0.02em) 0.02em black,
        max(1px, 0.02em) max(1px, 0.02em) 0.02em black;
}

.shadowed-text {
    text-shadow:
        min(-1px, -0.02em) min(-1px, -0.02em) 0.01em black,
        min(-1px, -0.02em) max(1px, 0.02em) 0.01em black,
        max(1px, 0.02em) min(-1px, -0.02em) 0.01em black,
        max(1px, 0.02em) max(1px, 0.02em) 0.01em black,
        0.04em 0.1em black;
}

.pos-absolute {
    position: absolute;
}

.pos-relative {
    position: relative;
}

.row {
    display: flex;
    flex-direction: row;
}

.space-between {
    justify-content: space-between;
}

.text-article {
    font-size: var(--mm-font-size-article);
}

.text-center {
    text-align: center;
}

.text-small {
    font-size: var(--mm-font-size-small);
}

.text-xs {
    font-size: var(--mm-font-size-xs);
}

.w-100 {
    width: 100%;
}

.wrap {
    flex-wrap: wrap;
}
